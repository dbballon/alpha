{"version":3,"sources":["logo.svg","Components/ProductsTable.js","Components/DropSelect.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ProductsTable","props","table","key","products","entries","i","product","cell","push","name","price","toFixed","rating","manufacturer","className","DropSelect","state","selectSort","typeElem","document","getElementById","typeValue","options","selectedIndex","value","toLowerCase","directionElem","directionValue","sortTable","val","direction","type","sort","a","b","setState","id","defaultValue","onChange","this","disabled","Component","App","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a0a42675.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport './ProductsTable.css';\r\n\r\nconst ProductsTable = (props) => {\r\n\tlet table = [<tr key='tr0'><th>Name</th><th>Price</th><th>Rating</th><th>Manufacturer</th></tr>];\r\n\tfor (const [i,product] of props.products.entries()){\r\n\t\tlet cell = [];\r\n\t\tcell.push(<td key={i*5+1}>{product.name}</td>,<td key={i*5+2}>{product.price.toFixed(2)}</td>,<td key={i*5+3}>{product.rating}</td>,<td key={i*5+4}>{product.manufacturer}</td>)\r\n\t\ttable.push(<tr key={i*5}>{cell}</tr>);\r\n\t}\r\n  return (\r\n    <table className=\"ProductsTable\"><tbody>{table}</tbody></table>\r\n  )\r\n}\r\n\r\nexport default ProductsTable;","import React, { Component } from 'react';\r\nimport ProductsTable from './ProductsTable'\r\nimport './DropSelect.css';\r\n\r\nclass DropSelect extends Component {\r\n\tstate = {\r\n\t\tproducts : [\r\n\t    {\r\n\t      name : 'Football',\r\n\t      price : 35.50,\r\n\t      manufacturer : 'Amazon',\r\n\t      rating : 5\r\n\t    },\r\n\t    {\r\n\t      name : 'Outboard Motor',\r\n\t      price : 235,\r\n\t      manufacturer : 'Boater\\'s World',\r\n\t      rating : 2\r\n\t    },\r\n\t    {\r\n\t      name : 'International Space Station',\r\n\t      price : 9338,\r\n\t      manufacturer : 'N.A.S.A.',\r\n\t      rating : 3\r\n\t    },\r\n\t    {\r\n\t      name : 'Sperm Whale',\r\n\t      price : 49.99,\r\n\t      manufacturer : 'Fisherman\\'s World',\r\n\t      rating : 1\r\n\t    },\r\n\t    {\r\n\t      name : 'Flowerpot',\r\n\t      price : 18.80,\r\n\t      manufacturer : 'Gardener\\'s World',\r\n\t      rating : 4\r\n\t    },\r\n\t    {\r\n\t      name : 'Petunias',\r\n\t      price : 25.00,\r\n\t      manufacturer : 'Fox',\r\n\t      rating : 5\r\n\t    },\r\n\t  ]\r\n\t}\r\n\r\n\tselectSort = () => {\r\n\t\tconst typeElem = document.getElementById(\"type\");\r\n\t\tconst typeValue = typeElem.options[typeElem.selectedIndex].value.toLowerCase();\r\n\t\tif (typeValue==='none')\r\n\t\t\treturn;\r\n\t\tconst directionElem = document.getElementById(\"direction\");\r\n\t\tconst directionValue = directionElem.options[directionElem.selectedIndex].value;\r\n\t\tif (typeValue==='price' || typeValue===\"rating\")\r\n\t\t\tthis.sortTable(typeValue,directionValue, 'number');\r\n\t\telse\r\n\t\t\tthis.sortTable(typeValue,directionValue,'text')\r\n\t}\r\n\r\n\tsortTable = (val,direction,type) => {\r\n\t\tlet products = this.state.products;\r\n\t\tif (type==='number'){\r\n\t\t\tif (direction===\"0\")\r\n\t\t\t\tproducts.sort((a,b) => a[val] - b[val])\r\n\t\t\telse \r\n\t\t\t\tproducts.sort((a,b) => b[val] - a[val])\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (direction===\"0\")\r\n\t\t\t\tproducts.sort((a,b) =>  b[val].toLowerCase() < a[val].toLowerCase() ? 1 : -1)\r\n\t\t\telse \r\n\t\t\t\tproducts.sort((a,b) => a[val].toLowerCase() < b[val].toLowerCase() ? 1 : -1)\r\n\t\t}\r\n\t\tthis.setState(products)\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"DropSelect\">\r\n\t\t\t\t<select id=\"type\" defaultValue='none' onChange={this.selectSort}>\r\n\t\t\t\t\t<option value=\"none\" disabled>--select option--</option>\r\n\t\t\t\t\t<option>Name</option>\r\n\t\t\t\t\t<option>Price</option>\r\n\t\t\t\t\t<option>Rating</option>\r\n\t\t\t\t\t<option>Manufacturer</option>\r\n\t\t\t\t</select>\r\n\t\t\t\t<select id=\"direction\" onChange={this.selectSort}>\r\n\t\t\t\t\t<option value=\"0\">Low to High</option>\r\n\t\t\t\t\t<option value=\"1\">High to Low</option>\r\n\t\t\t\t</select>\r\n\t\t\t\t<ProductsTable products={this.state.products} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default DropSelect;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport DropSelect from './Components/DropSelect'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <DropSelect />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}